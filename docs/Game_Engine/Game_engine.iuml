@startuml App_design

class App
App : void main()

class Engine
Engine : Renderer
Engine : std::vector<EventListener*> inputListerners
Engine : void run()


interface RenderQueue
RenderQueue : void pushRenderable(renderable*)
RenderQueue : void pushRenderable(List<renderable*> list)


class Renderer
Renderer : void pushRenderable(renderable*)
Renderer : void pushRenderable(List<renderable*> list)
Renderer : void render()
Renderer : Queue<renderable*>*


class EventManager 
EventManager : List<> storypoints
EventManager : Renderer* outputStream
EventManager : input(char input)


App *--Engine
Engine *-- Renderer
Engine o-- EventManager
RenderQueue <|-- Renderer
EventManager *-- RenderQueue
@enduml