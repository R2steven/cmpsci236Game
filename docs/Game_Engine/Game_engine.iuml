@startuml
class GameApp

Interface GameEventListener
EventListener : input(char input)

Interface EventManager
EventManager : void addListener(EventListener*)
EventManager : void removeListener(EvenetListener*)
EventManager : void notify()

class GameEngine
GameEngine : Renderer
GameEngine : std::vector<EventListener*> inputListerners


class Renderer
Renderer : void pushRenderable(renderable*)
Renderer : void pushRenderable(List<renderable*> list)
Renderer : void render()
Renderer : Queue<renderable*>*


class GameEventManager 
GameEventManager : List<> storypoints
GameEventManager : Renderer* outputStream
GameEventManager : input(char input)


EventManager <|-- GameEngine





@enduml